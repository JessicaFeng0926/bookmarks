"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from django.urls import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+ds+5a47yoq#_9lh5vro_f(8%(ko*6@z9ji5m4jgwn)q)zc+xb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 启动easy_thumbnails的debug程序
THUMBNAIL_DEBUG = True

ALLOWED_HOSTS = ['mysite.com','127.0.0.1','localhost']


# Application definition

INSTALLED_APPS = [
    # 这个认证的app放在开头
    # django就会优先使用它提供的模板
    'account.apps.AccountConfig',

    'django.contrib.admin',
    # django自带的认证处理app
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 第三方应用
    # 这个是用来使用别的社交账户登录
    'social_django',
    # 下面这个是跟安全相关的拓展，ssl等
    'django_extensions',
    # 这是处理图片的应用
    'easy_thumbnails',

    # 本地应用
    'images.apps.ImagesConfig',
    'actions.apps.ActionsConfig',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 处理当前的会话
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    # 这个中间件用sessions把用户和请求联系了起来
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookmarks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmarks.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# 用户上传的媒体文件所在目录
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# 如果没有next参数，登录之后就重定向到主页
LOGIN_REDIRECT_URL = 'dashboard'
# 如果用户在没有登录的情况下访问受保护的视图，就重定向到登录页面
LOGIN_URL = 'login'
# 指明这是登出的路径
LOGOUT_URL = 'logout'

# 开发过程中不需要实际发送邮件，所以这里设置把邮件发送到控制台
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

SOCIAL_AUTH_WEIBO_KEY = ''
SOCIAL_AUTH_WEIBO_SECRET = ''

# 用户身份验证后端
AUTHENTICATION_BACKENDS = {
    # 优先使用用户名和密码的验证
    'django.contrib.auth.backends.ModelBackend',
    # 其次验证邮箱和密码
    'account.authentication.EmailAuthBackend',
    # 支持用google账号登录
    'social_core.backends.google.GoogleOAuth2',
}

# 覆盖用户默认的absolute_url
ABSOLUTE_URL_OVERRIDES = {
    # 这里的user要小写
    'auth.user': lambda u: reverse_lazy('user_detail',
                                        args=[u.username])
}